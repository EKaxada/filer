{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","useState","file","setFile","onSubmit","e","preventDefault","formData","FormData","append","axios","post","headers","then","res","alert","catch","err","console","error","type","name","onchange","target","files","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAiCeA,EA9BH,SAACC,GAAW,IAAD,EACGC,mBAAS,MADZ,mBACdC,EADc,KACRC,EADQ,KAiBrB,OACE,uBAAMC,SAfS,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUP,GAE1BQ,IACGC,KAFS,gDAECJ,EAAU,CACnBK,QAAS,CACP,eAAgB,yBAGnBC,MAAK,SAACC,GAAD,OAASC,MAAM,iCACpBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OAGhC,UACE,uDACA,uBACEG,KAAK,OACLC,KAAK,OACLC,SAAU,SAACjB,GAAD,OAAOF,EAAQE,EAAEkB,OAAOC,UAEpC,wBAAQJ,KAAK,SAAb,wBChBSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a5a5dcc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = (props) => {\n  const [file, setFile] = useState(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myfile\", file);\n    const URL = \"https://file-server-side.herokuapp.com/upload\";\n    axios\n      .post(URL, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => alert(\"file successfully uploaded\"))\n      .catch((err) => console.error(err));\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h1>upload your file here</h1>\n      <input\n        type=\"file\"\n        name=\"file\"\n        onchange={(e) => setFile(e.target.files)}\n      />\n      <button type=\"submit\">upload</button>\n    </form>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}