{"version":3,"sources":["utils/constants.js","components/App.js","components/Header.js","components/FilesList.js","router/AppRouter.js","index.js"],"names":["API_URL","App","props","useState","file","setFile","previewSrc","setPreviewSrc","title","description","state","setState","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","useRef","handleInputChange","e","target","name","value","updateBorder","dragState","current","style","border","handleOnSubmit","a","preventDefault","trim","formData","FormData","append","axios","post","headers","history","push","response","data","Form","className","onSubmit","Row","Col","Group","controlId","Control","type","placeholder","onChange","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","src","alt","Button","variant","Header","activeClassName","to","exact","FilesList","filesList","setFilesList","useEffect","get","getFilesList","downloadFile","id","path","mimetype","responseType","split","filename","length","download","status","map","_id","file_path","file_mimetype","href","onClick","colSpan","fontWeight","AppRouter","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b0b27a8.chunk.js","sourcesContent":["export const API_URL = \"http://localhost:5000\";\r\n","import React, { useState, useRef, Fragment } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../utils/constants\";\r\n\r\nconst App = (props) => {\r\n  const [file, setFile] = useState(null);\r\n  const [previewSrc, setPreviewSrc] = useState(\"\");\r\n  const [state, setState] = useState({ title: \"\", description: \"\" });\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false);\r\n  const dropRef = useRef();\r\n\r\n  const handleInputChange = (e) =>\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n    dropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === \"over\") {\r\n      dropRef.current.style.border = \"2px solid #000\";\r\n    } else if (dragState === \"leave\") {\r\n      dropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { title, description } = state;\r\n      if (title.trim() !== \"\" && description.trim() !== \"\") {\r\n        if (file) {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"title\", title);\r\n          formData.append(\"description\", description);\r\n\r\n          setErrorMsg(\"\");\r\n          await axios.post(`${API_URL}/upload`, formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          });\r\n          props.history.push(\"/list\");\r\n        } else {\r\n          setErrorMsg(\"Please select a file to add.\");\r\n        }\r\n      } else {\r\n        setErrorMsg(\"Please enter all the field values\");\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={state.title || \"\"}\r\n                placeholder=\"Enter title\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={state.description || \"\"}\r\n                placeholder=\"Enter description\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"upload-section\">\r\n          <Dropzone\r\n            onDrop={onDrop}\r\n            onDragEnter={() => updateBorder(\"over\")}\r\n            onDragLeave={() => updateBorder(\"leave\")}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: \"drop-zone\" })} ref={dropRef}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag and drop a file OR click here to select a file</p>\r\n                {file && (\r\n                  <div>\r\n                    <strong>Selected file:</strong>\r\n                    {file.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          {previewSrc ? (\r\n            isPreviewAvailable ? (\r\n              <div className=\"image-preview\">\r\n                <img src={previewSrc} alt=\"Preview\" className=\"preview-image\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"preview-message\">\r\n                <p>No preview available for this file.</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"preview-message\">\r\n              <p>Image preview will be shown here after selection.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>My Cloud</h1>\r\n      <nav>\r\n        <NavLink activeClassName=\"active\" to=\"/\" exact={true}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/list\">\r\n          my files\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport download from \"downloadjs\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../utils/constants\";\r\n\r\nconst FilesList = () => {\r\n  const [filesList, setFilesList] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getFilesList = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${API_URL}/getAllFiles`);\r\n        setErrorMsg(\"\");\r\n        setFilesList(data);\r\n      } catch (error) {\r\n        error.response && setErrorMsg(error.response.data);\r\n      }\r\n    };\r\n    getFilesList();\r\n  }, []);\r\n\r\n  const downloadFile = async (id, path, mimetype) => {\r\n    try {\r\n      const result = await axios.get(`${API_URL}/download/${id}`, {\r\n        responseType: \"blob\",\r\n      });\r\n      const split = path.split(\"/\");\r\n      const filename = split[split.length - 1];\r\n      setErrorMsg(\"\");\r\n      return download(result.data, filename, mimetype);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg(\"Error while downloading file. Please Try again later\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"files-container\">\r\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n      <table className=\"files-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Download File</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filesList.length > 0 ? (\r\n            filesList.map(\r\n              ({ _id, title, description, file_path, file_mimetype }) => (\r\n                <tr key={_id}>\r\n                  <td className=\"file-title\">{title}</td>\r\n                  <td className=\"file-description\">{description}</td>\r\n                  <td>\r\n                    <a\r\n                      href=\"#/\"\r\n                      onClick={() =>\r\n                        downloadFile(_id, file_path, file_mimetype)\r\n                      }\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={3} style={{ fontWeight: \"300\" }}>\r\n                No files found. Please add some.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilesList;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"../components/App\";\r\nimport Header from \"../components/Header\";\r\nimport FilesList from \"../components/FilesList\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <div className=\"main-content\">\r\n          <Switch>\r\n            <Route component={App} path=\"/\" exact={true} />\r\n            <Route component={FilesList} path=\"/list\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./router/AppRouter\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.scss\";\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}